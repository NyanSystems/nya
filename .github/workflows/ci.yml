name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: macos-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl



    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
  

    # Setup Nix
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable

    # Build the project using Nix
    - name: Build
      run: nix-build

    # Install the project (if there is an install script or make target)
    - name: Install
      run: nix-env -i -f default.nix

    # Run the project (replace './result/bin/myapp' with your binary path)
    - name: Run
      run: ./result/bin/nya